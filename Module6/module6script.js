'use strict';
//==================Home-Work====================

// /*
//   –°–µ—Ç—å —Ñ–∞—Å—Ç—Ñ—É–¥–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –≥–∞–º–±—É—Ä–≥–µ—Ä–æ–≤.
//   –û—Å–Ω–æ–≤–∞ (–±—É–ª–æ—á–∫–∞) –≥–∞–º–±—É—Ä–≥–µ—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–æ–π –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–æ–π (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):
// 	- –º–∞–ª–µ–Ω—å–∫–∞—è (+30 –¥–µ–Ω–µ–≥, +50 –∫–∞–ª–æ—Ä–∏–π)
// 	- –±–æ–ª—å—à–∞—è (+50 –¥–µ–Ω–µ–≥, +100 –∫–∞–ª–æ—Ä–∏–π)
//   –ì–∞–º–±—É—Ä–≥–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Å –æ–¥–Ω–æ–π –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∏–¥–æ–≤ –Ω–∞—á–∏–Ω–æ–∫ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):
// 	- —Å—ã—Ä–æ–º (+15 –¥–µ–Ω–µ–≥, +20 –∫–∞–ª–æ—Ä–∏–π)
// 	- —Å–∞–ª–∞—Ç–æ–º (+20 –¥–µ–Ω–µ–≥, +5 –∫–∞–ª–æ—Ä–∏–π)
// 	- –º—è—Å–æ–º (+35 –¥–µ–Ω–µ–≥, +15 –∫–∞–ª–æ—Ä–∏–π)
//   –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –≥–∞–º–±—É—Ä–≥–µ—Ä –º–æ–∂–Ω–æ:
// 	- –ø–æ—Å—ã–ø–∞—Ç—å –ø—Ä–∏–ø—Ä–∞–≤–æ–π (+10 –¥–µ–Ω–µ–≥, +0 –∫–∞–ª–æ—Ä–∏–π)
// 	- –ø–æ–ª–∏—Ç—å —Å–æ—É—Å–æ–º (+15 –¥–µ–Ω–µ–≥, +5 –∫–∞–ª–æ—Ä–∏–π)
//   –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç, —Ä–∞—Å—á–∏—Ç—ã–≤–∞—é—â–∏–π —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –≥–∞–º–±—É—Ä–≥–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É—Ç–µ –û–û–ü –ø–æ–¥—Ö–æ–¥,
//   —Å–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Hamburger, –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π –∏ —Ä–∞—Å—Å—á–µ—Ç–∞ –Ω—É–∂–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω.
//   –ù–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–º—É jsDoc –æ–ø–∏—Å–∞–Ω–∏—é. –¢–æ –µ—Å—Ç—å –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å
//   —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.
// */

// /**
//  * –ö–ª–∞—Å—Å, –æ–±—ä–µ–∫—Ç—ã –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–ø–∏—Å—ã–≤–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–∞–º–±—É—Ä–≥–µ—Ä–∞.
//  */
// class Hamburger {
//     /**
//      * @constructor
//      * @param {String} size - –†–∞–∑–º–µ—Ä
//      * @param {String} stuffing - –ù–∞—á–∏–Ω–∫–∞
//      */
//     constructor(size, stuffing) {
//       this._size = size;
//       this._stuffing = stuffing;
//       this._toppings = [];
//     }

//     /**
//      * –î–æ–±–∞–≤–∏—Ç—å topping –∫ –≥–∞–º–±—É—Ä–≥–µ—Ä—É. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ topping, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ–Ω–∏ —Ä–∞–∑–Ω—ã–µ.
//      * @param {String} topping - –¢–∏–ø –¥–æ–±–∞–≤–∫–∏
//      */
//     addTopping(topping) {
//       return !this._toppings.includes(topping) ? this._toppings.push(topping) : null;
//     };



//     /**
//      * –£–±—Ä–∞—Ç—å topping, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ–Ω–∞ —Ä–∞–Ω–µ–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
//      * @param {String} topping - –¢–∏–ø –¥–æ–±–∞–≤–∫–∏
//      */
//     removeTopping(topping) {
//       // return this._toppings.splice(this.toppings.indexOf(topping), 1);
//       return this._toppings.includes(topping) ? this._toppings.splice(this._toppings.indexOf(topping),1) : null;
//     }


//     /**
//      * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ toppings
//      * @returns {Array} - –ú–∞—Å—Å–∏–≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö topping, —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç Hamburger.TOPPING_*
//      *
//      * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.toppings –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ –¥–æ–±–∞–≤–æ–∫
//      */

//      get toppings () {
//       return this._toppings;
//      }

//     /**
//      * –£–∑–Ω–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
//      * @returns {String} - —Ä–∞–∑–º–µ—Ä –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
//      *
//      * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.size –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Ä–∞–∑–º–µ—Ä
//      */

//     get size () {
//       return this._size;
//      }

//     // set size (topping) {
//     //   this._size = size;
//     // }

//     /**
//      * –£–∑–Ω–∞—Ç—å –Ω–∞—á–∏–Ω–∫—É –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
//      * @returns {String} - –Ω–∞—á–∏–Ω–∫–∞ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
//      *
//      * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.stuffing –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç –Ω–∞—á–∏–Ω–∫—É
//      */

//     get stuffing () {
//       return this._stuffing;
//      }

//     // set stuffing(stuffing) {
//     //   this._stuffing = stuffing;
//     // }

//     /**
//      * –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
//      * @returns {Number} - –¶–µ–Ω–∞ –≤ –¥–µ–Ω—å–≥–∞—Ö
//      *
//      * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.price –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Å—É–º–º—É.
//      */

//      calculateToppingsPrices () {
//        return this._toppings.reduce((acc,el) => acc + Hamburger.TOPPINGS[el].price, 0)
//         // let total = 0;
//         // for (let el of this._toppings) {
//         //   if (el !== Hamburger.TOPPINGS.el) {
//         //     total += Hamburger.TOPPINGS[el].price
//         //   } 
//         // } return total 
//       } 

//       get price() {
//         return Hamburger.SIZES[this._size].price + 
//         Hamburger.STUFFINGS[this._stuffing].price 
//         + this.calculateToppingsPrices()
//       }



//     /**
//      * –£–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å
//      * @returns {Number} - –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –≤ –∫–∞–ª–æ—Ä–∏—è—Ö
//      *
//      * –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≥–µ—Ç—Ç–µ—Ä–æ–º —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ obj.calories –∏ –Ω–∞–º –≤–µ—Ä–Ω–µ—Ç —Å—É–º–º—É.
//      */

//     calculateToppingsCalories () {
//       return this._toppings.reduce((acc,el) => acc + Hamburger.TOPPINGS[el].calories, 0)
//       // let total = 0;
//       // for (let el of this._toppings) {
//       //   if (el !== Hamburger.TOPPINGS.el) {
//       //     total += Hamburger.TOPPINGS[el].calories
//       //   } 
//       // } return total 
//     } 

//     get calories() {
//       return Hamburger.SIZES[this._size].calories + 
//       Hamburger.STUFFINGS[this._stuffing].calories 
//       + this.calculateToppingsCalories();
//     }
//   }
//   /*
//     –†–∞–∑–º–µ—Ä—ã, –≤–∏–¥—ã –¥–æ–±–∞–≤–æ–∫ –∏ –Ω–∞—á–∏–Ω–æ–∫ –æ–±—ä—è–≤–∏—Ç–µ –∫–∞–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –∫–ª–∞—Å—Å–∞.
//     –î–æ–±–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å–≤—É—é—â–∏–µ –ø–æ–ª—è –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–æ–º.
//   */
//   Hamburger.SIZE_SMALL = 'SIZE_SMALL';
//   Hamburger.SIZE_LARGE = 'SIZE_LARGE';
//   Hamburger.SIZES = {
//     [Hamburger.SIZE_SMALL]: {
//       price: 30,
//       calories: 50,
//     },
//     [Hamburger.SIZE_LARGE]: {
//       price: 50,
//       calories: 100,
//     },
//   };
//   // console.log(Hamburger.SIZES[Hamburger.SIZE_SMALL].price);

//   Hamburger.STUFFING_CHEESE = 'STUFFING_CHEESE';
//   Hamburger.STUFFING_SALAD = 'STUFFING_SALAD';
//   Hamburger.STUFFING_MEAT = 'STUFFING_MEAT';

//   Hamburger.STUFFINGS = {
//     [Hamburger.STUFFING_CHEESE]: {
//       price: 15,
//       calories: 20,
//     },
//     [Hamburger.STUFFING_SALAD]: {
//       price: 25,
//       calories: 30,
//     },
//     [Hamburger.STUFFING_MEAT]: {
//       price: 40,
//       calories: 70,
//     },
//   };

//   Hamburger.TOPPING_SPICE = 'TOPPING_SPICE';
//   Hamburger.TOPPING_SAUSE = 'TOPPING_SAUSE';
//   Hamburger.TOPPING_COF = 'TOPPING_COF';


//   Hamburger.TOPPINGS = {
//     [Hamburger.TOPPING_SPICE]: {
//       price: 10,
//       calories: 0,
//     },
//     [Hamburger.TOPPING_SAUSE]: {
//       price: 20,
//       calories: 15,
//     },
//     [Hamburger.TOPPING_COF]: {
//       price: 34,
//       calories: 33,
//     }
//   };


//   /* –í–æ—Ç –∫–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ */

//   // –ú–∞–ª–µ–Ω—å–∫–∏–π –≥–∞–º–±—É—Ä–≥–µ—Ä —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ —Å—ã—Ä–∞
//   const hamburger = new Hamburger(Hamburger.SIZE_SMALL, Hamburger.STUFFING_CHEESE);

//   console.log(hamburger);
//   // –î–æ–±–∞–≤–∫–∞ –∏–∑ –ø—Ä–∏–ø—Ä–∞–≤—ã
//   hamburger.addTopping(Hamburger.TOPPING_SAUSE);

//   // –°–ø—Ä–æ—Å–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∫–∞–ª–æ—Ä–∏–π
//   console.log("Ham1 Calories: ",hamburger.calories);

//   // –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?
//   console.log("Ham1 Price: ",hamburger.price);

//   // –Ø —Ç—É—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª –∏ —Ä–µ—à–∏–ª –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å–æ—É—Å
//   hamburger.addTopping(Hamburger.TOPPING_SPICE);

//   // –ê —Å–∫–æ–ª—å–∫–æ —Ç–µ–ø–µ—Ä—å —Å—Ç–æ–∏—Ç?
//   console.log("Ham1 Price with sause: ",hamburger.price);
//   // console.log("Ham1 Calories with sause: ",hamburger.calories);

//   // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –±–æ–ª—å—à–æ–π –ª–∏ –≥–∞–º–±—É—Ä–≥–µ—Ä?
//   console.log("Is hamburger large: ", hamburger.size === Hamburger.SIZE_LARGE); // -> false

//   // –£–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–∫—É
//   hamburger.removeTopping(Hamburger.TOPPING_SPICE);

//   // –°–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–æ–∫
//   console.log("Ham1. Hamburger has %d toppings", hamburger.toppings.length); // 1

// /*
//   üîî –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã:
//         ‚úîÔ∏è –∫–ª–∞—Å—Å –Ω–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –≤–Ω–µ—à–Ω–∏–º –º–∏—Ä–æ–º. –≠—Ç–æ –Ω–µ –µ–≥–æ –¥–µ–ª–æ, —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è
//             –¥—Ä—É–≥–æ–π –∫–æ–¥, –∞ –∫–ª–∞—Å—Å –∂–∏–≤–µ—Ç –≤ –∏–∑–æ–ª—è—Ü–∏–∏ –æ—Ç –º–∏—Ä–∞
//         ‚úîÔ∏è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Ä–∞–∑–º–µ—Ä –∏ –Ω–∞—á–∏–Ω–∫–∞) –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä,
//         —á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–µ —É–∫–∞–∑–∞–≤ –∏—Ö
//         ‚úîÔ∏è –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ (–¥–æ–±–∞–≤–∫–∞) –¥–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã
//         ‚úîÔ∏è —Ç–∏–ø—ã –Ω–∞—á–∏–Ω–æ–∫ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã "–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏" —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–æ—Å—Ç–æ
//             —Å–≤–æ–π—Å—Ç–≤–∞–º–∏, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å —Å—á–∏—Ç–∞—Ç—å "–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏")
//         ‚úîÔ∏è –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π.
//         ‚úîÔ∏è –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –æ–±—ä–µ–∫—Ç–∞ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞ –ª–æ–≥–∏—á–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ä–∞–∑–º–µ—Ä, —Ç–∏–ø –Ω–∞—á–∏–Ω–∫–∏),
//               –∞ –Ω–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∏–∑ –Ω–∏—Ö (—Ü–µ–Ω–∞, —á–∏—Å–ª–æ –∫–∞–ª–æ—Ä–∏–π –∏ —Ç.–¥.). –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ü–µ–Ω—É –∏ –∫–∞–ª–æ—Ä–∏–∏
//         –ª–æ–≥–∏—á–Ω–æ –≤ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —ç—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, –∞ –Ω–µ –∑–∞—Ä–∞–Ω–µ–µ.
// */

//=======================MODULE 6 TASK 1======================

/*
  –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Account, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –±—É–¥—É—â–µ–º—É
  –æ–±—ä–µ–∫—Ç—É –ø–æ–ª—è login, email –∏ friendsCount. 
  
  –í prototype —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ getAccountInfo(), 
  –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π login, email –∏ friendsCount. 
  
  –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –≤—Å–µ–≥–æ –æ–¥–∏–Ω, –≤ –ø–æ–ª–µ prototype —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, 
  –∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–º–æ–≥—É—Ç –≤—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã, –ø–æ —Å—Å—ã–ª–∫–µ.
  
  –°–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å–≤–æ–π—Å—Ç–≤, –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

// const Account = function (login, email) {
//     this.login = login;
//     this.email = email;
// };

// Account.prototype.getAccountInfo = function () {
//     console.log(`Login: ${this.login}, email: ${this.email}`); 
// };

// const account = new Account('Mangozedog', 'mango@dog.woof');
// let user1 = new Account ('Jack', 'gjgjgj@gmail.com');
// let user2 = new Account ('Barbie', 'ololololo_lololo@gmail.com');
// let user3 = new Account ('Tor', 'jglksjdgskdlg_dkfjkg@ukr.com');

// account.getAccountInfo();
// user1.getAccountInfo();
// user2.getAccountInfo();
// user3.getAccountInfo();

// /************** 2 ***************/

// /*
//   –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä StringBuilder.
//   –ù–∞ –≤—Ö–æ–¥ –æ–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä string - —Å—Ç—Ä–æ–∫—É.
//   –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –≤ prototype —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞.
//     - getValue() - –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è value
//     - append(str) - –ø–æ–ª—É—á–∞–µ—Ç –ø–∞—Ä–º–µ—Ç—Ä str - —Å—Ç—Ä–æ–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç 
//       –µ–µ –≤ –∫–æ–Ω–µ—Ü –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è value
//     - prepend(str) - –ø–æ–ª—É—á–∞–µ—Ç –ø–∞—Ä–º–µ—Ç—Ä str - —Å—Ç—Ä–æ–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç 
//       –µ–µ –≤ –Ω–∞—á–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è value
//     - pad(str) - –ø–æ–ª—É—á–∞–µ—Ç –ø–∞—Ä–º–µ—Ç—Ä str - —Å—Ç—Ä–æ–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç 
//       –µ–µ –≤ –Ω–∞—á–∞–ª–æ –∏ –≤ –∫–æ–Ω–µ—Ü –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è value
// */


// function StringBuilder(string = "") {
//     this.value = string;

//     StringBuilder.prototype.showValue = function () {
//         console.log(this.value);
//     };
//     StringBuilder.prototype.append = function (str) {
//         builder.value = `${builder.value}${str}`;
//     };
//     StringBuilder.prototype.prepend = function (str) {
//         builder.value = `${str}${builder.value}`;
//     };
//     StringBuilder.prototype.pad = function (str) {
//         builder.value = `${str}${builder.value}${str}`;
//     };
// }
// const builder = new StringBuilder('.');

// builder.append('^');
// builder.showValue(); // '.^'

// builder.prepend('^');
// builder.showValue(); // '^.^'

// builder.pad('=');
// builder.showValue(); // '=^.^='

//=========================
// /*
//   –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏.
// */
/*
  –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞:
    - speed - –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ 0.
    - maxSpeed - –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ 
    - running - –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω –ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, 
      –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è true –∏–ª–∏ false. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ false.
    - distance - —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–π –∫–∏–ª–ª–æ–º–µ—Ç—Ä–∞–∂, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å 0
*/

// class Car {
//     constructor({
//         maxSpeed = 0
//     }) {
//         this.speed = 0;
//         this.maxSpeed = maxSpeed;
//         this.running = false;
//         this.distance = 0;
//     }
//     turnOn() {
//         // –î–æ–±–∞–≤—å –∫–æ–¥ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–≤–µ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å
//         // –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ running –∑–Ω–∞—á–∞–Ω–∏–µ true

//         return this.running = true;
//     }
//     turnOff() {
//         // –î–æ–±–∞–≤—å –∫–æ–¥ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–≥–ª—É—à–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å
//         // –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ running –∑–Ω–∞—á–∞–Ω–∏–µ false
//         return this.running = false;
//     }
//     accelerate(spd) {
//         // –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ø–æ–ª–µ speed –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ
//         // –æ–Ω–æ –Ω–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ maxSpeed
//         if (spd <= this.maxSpeed) {
//             return this.speed = spd;
//         } else {
//             return '–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏';
//         }
//     }
//     decelerate(spd) {
//         // –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ø–æ–ª–µ speed –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ
//         // –æ–Ω–æ –Ω–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ maxSpeed –∏ –Ω–µ –º–µ–Ω—å—à–µ –Ω—É–ª—è
//         if (spd <= this.maxSpeed && spd >= 0) {
//             return this.speed = spd;
//         }
//     }
//     drive(hours) {
//         // –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –ø–æ–ª–µ distance –∫–∏–ª–ª–æ–º–µ—Ç—Ä–∞–∂ (hours —É–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è speed),
//         // –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –º–∞—à–∏–Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∞!
//         if (this.turnOn) {
//             return this.distance = (hours * this.speed);
//         }
//     }
// }

// const newCar = new Car({
//     maxSpeed: 310
// });

// console.log('Turn on the car', newCar.turnOn());
// console.log('Change speed', newCar.accelerate(40));
// console.log(newCar.accelerate(140));
// console.log("Your distance", newCar.drive(2));
// console.log('Change speed', newCar.decelerate(0));
// console.log("Turn off the car", newCar.turnOff());

//========================OR========================

// const Car = function (maxSpeed) {
//     this.speed = 0;
//     this.maxSpeed = maxSpeed;
//     this.running = false;
//     this.distance = 0;
// };

// Car.prototype.turnOn = function () {
//     return this.running = true;
// };


// Car.prototype.turnOff = function () {
//     return this.running = false;
// };

// Car.prototype.accelerate = function (spd) {
//     if (spd <= this.maxSpeed) {
//         return this.speed = spd;
//     } else {
//         return '–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏';
//     }
// };

// Car.prototype.decelerate = function (spd) {
//     if (spd <= this.maxSpeed && spd >= 0) {
//         return this.speed = spd;
//     }
// };

// Car.prototype.drive = function (hours) {
//     if (this.turnOn) {
//         return this.distance = (hours * this.speed);
//     }
// };

// Car.prototype.getSpecs = function (car) {

//     console.log(`maxSpeed: ${this.maxSpeed},speed: ${this.speed}, running: ${this.running}, distance: ${this.distance}`);

// };
// const car = new Car({ maxSpeed: 100 });
// console.log('Turn on the car', car.turnOn());
// console.log('Change speed', car.accelerate(40));
// console.log( car.accelerate(140));
// console.log("Your distance", car.drive(2));
// console.log('Change speed', car.decelerate(0));
// console.log("Turn off the car", car.turnOff());

